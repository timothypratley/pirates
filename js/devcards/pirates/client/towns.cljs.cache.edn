;; Analyzed by ClojureScript 1.8.34
{:use-macros {defcard-rg devcards.core}, :excludes #{}, :name pirates.client.towns, :imports nil, :requires {cljsjs.three cljsjs.three, devcards.core devcards.core, reagent reagent.core, reagent.core reagent.core}, :uses nil, :defs {faction-materials {:name pirates.client.towns/faction-materials, :file "src/pirates/client/towns.cljs", :line 7, :column 1, :end-line 7, :end-column 23, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/towns.cljs", :line 7, :column 6, :end-line 7, :end-column 23}}, create-town {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/towns.cljs", :line 13, :column 7, :end-line 13, :end-column 18, :arglists (quote ([town-name]))}, :name pirates.client.towns/create-town, :variadic false, :file "src/pirates/client/towns.cljs", :end-column 18, :method-params ([town-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([town-name]))}, coords {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/towns.cljs", :line 19, :column 7, :end-line 19, :end-column 13, :arglists (quote ([lat lon]))}, :name pirates.client.towns/coords, :variadic false, :file "src/pirates/client/towns.cljs", :end-column 13, :method-params ([lat lon]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([lat lon]))}, load-town {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/towns.cljs", :line 22, :column 7, :end-line 22, :end-column 16, :arglists (quote ([parent [town-name {[lat lon] :latlon, [rx ry rz] :rotation, faction :faction}]]))}, :name pirates.client.towns/load-town, :variadic false, :file "src/pirates/client/towns.cljs", :end-column 16, :method-params ([parent p__77302]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parent [town-name {[lat lon] :latlon, [rx ry rz] :rotation, faction :faction}]]))}, load-towns {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/towns.cljs", :line 35, :column 7, :end-line 35, :end-column 17, :arglists (quote ([scene towns]))}, :name pirates.client.towns/load-towns, :variadic false, :file "src/pirates/client/towns.cljs", :end-column 17, :method-params ([scene towns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scene towns]))}, initial-towns {:name pirates.client.towns/initial-towns, :file "src/pirates/client/towns.cljs", :line 40, :column 1, :end-line 40, :end-column 19, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/towns.cljs", :line 40, :column 6, :end-line 40, :end-column 19}}, town-locations-card {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/towns.cljs", :line 245, :column 7, :end-line 245, :end-column 26, :arglists (quote ([]))}, :name pirates.client.towns/town-locations-card, :variadic false, :file "src/pirates/client/towns.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, t_pirates$client$towns77337 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name pirates.client.towns/t_pirates$client$towns77337, :file "src/pirates/client/towns.cljs", :type true, :anonymous true, :column 1, :line 252, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_pirates$client$towns77337 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta77338])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name pirates.client.towns/->t_pirates$client$towns77337, :variadic false, :file "src/pirates/client/towns.cljs", :method-params ([meta77338]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 252, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta77338])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {devcards.core devcards.core}, :cljs.analyzer/constants {:seen #{:wealth :path :faction :look-at :rotation meta77338 :func :name :town-locations :pirates.client.towns :type :documentation :main-obj :watch-atom :initial-data :population :latlon :camera :position :options :towns}, :order [:latlon :rotation :faction :type :population :wealth :camera :towns :position :look-at :path :func :pirates.client.towns :town-locations :name :documentation :main-obj :initial-data :options meta77338 :watch-atom]}, :doc nil}