;; Analyzed by ClojureScript 1.8.34
{:use-macros nil, :excludes #{}, :name pirates.client.scene, :imports nil, :requires {world pirates.client.world, pirates.client.world pirates.client.world, interpolate pirates.client.interpolate, pirates.client.interpolate pirates.client.interpolate, scenery pirates.client.scenery, pirates.client.scenery pirates.client.scenery, text-sprite pirates.client.text-sprite, pirates.client.text-sprite pirates.client.text-sprite}, :uses nil, :defs {make-scene {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/scene.cljs", :line 8, :column 7, :end-line 8, :end-column 17, :arglists (quote ([directional-light-position]))}, :name pirates.client.scene/make-scene, :variadic false, :file "src/pirates/client/scene.cljs", :end-column 17, :method-params ([directional-light-position]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([directional-light-position]))}, make-ship {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/scene.cljs", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([scene name]))}, :name pirates.client.scene/make-ship, :variadic false, :file "src/pirates/client/scene.cljs", :end-column 16, :method-params ([scene name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scene name]))}, wave-roll {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/scene.cljs", :line 21, :column 7, :end-line 21, :end-column 16, :arglists (quote ([ship t steer]))}, :name pirates.client.scene/wave-roll, :variadic false, :file "src/pirates/client/scene.cljs", :end-column 16, :method-params ([ship t steer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ship t steer]))}, other-players {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/scene.cljs", :line 28, :column 7, :end-line 28, :end-column 20, :arglists (quote ([t app-state scene]))}, :name pirates.client.scene/other-players, :variadic false, :file "src/pirates/client/scene.cljs", :end-column 20, :method-params ([t app-state scene]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([t app-state scene]))}, world-map-three-render {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/scene.cljs", :line 42, :column 7, :end-line 42, :end-column 29, :arglists (quote ([t app-state renderer scene camera ship water]))}, :name pirates.client.scene/world-map-three-render, :variadic false, :file "src/pirates/client/scene.cljs", :end-column 29, :method-params ([t app-state renderer scene camera ship water]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 7, :fn-var true, :arglists (quote ([t app-state renderer scene camera ship water]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:in-port :uid :town :steer :status :at :players :sailing :user :towns}, :order [:at :players :uid :steer :status :sailing :user :towns :in-port :town]}, :doc nil}