;; Analyzed by ClojureScript 1.8.34
{:name pirates.client.scenery, :doc "Y is up!", :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {cljsjs.three cljsjs.three, cljsjs.ocean cljsjs.ocean}, :imports nil, :defs {loadSkyBox {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/scenery.cljs", :line 7, :column 7, :end-line 7, :end-column 17, :arglists (quote ([scene]))}, :name pirates.client.scenery/loadSkyBox, :variadic false, :file "/Users/timothypratley/git/pirates/src/pirates/client/scenery.cljs", :end-column 17, :method-params ([scene]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([scene]))}, get-height-data {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/scenery.cljs", :line 34, :column 7, :end-line 34, :end-column 22, :arglists (quote ([img]))}, :name pirates.client.scenery/get-height-data, :variadic false, :file "/Users/timothypratley/git/pirates/src/pirates/client/scenery.cljs", :end-column 22, :method-params ([img]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([img]))}, create-terrain {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/scenery.cljs", :line 50, :column 7, :end-line 50, :end-column 21, :arglists (quote ([scene]))}, :name pirates.client.scenery/create-terrain, :variadic false, :file "/Users/timothypratley/git/pirates/src/pirates/client/scenery.cljs", :end-column 21, :method-params ([scene]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([scene]))}, load-model {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/scenery.cljs", :line 68, :column 7, :end-line 68, :end-column 17, :arglists (quote ([parent filename]))}, :name pirates.client.scenery/load-model, :variadic false, :file "/Users/timothypratley/git/pirates/src/pirates/client/scenery.cljs", :end-column 17, :method-params ([parent filename]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parent filename]))}, create-water {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/scenery.cljs", :line 77, :column 7, :end-line 77, :end-column 19, :arglists (quote ([scene renderer camera directional-light-position]))}, :name pirates.client.scenery/create-water, :variadic false, :file "/Users/timothypratley/git/pirates/src/pirates/client/scenery.cljs", :end-column 19, :method-params ([scene renderer camera directional-light-position]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 4, :fn-var true, :arglists (quote ([scene renderer camera directional-light-position]))}}}