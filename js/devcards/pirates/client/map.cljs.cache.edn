;; Analyzed by ClojureScript 1.8.34
{:use-macros nil, :excludes #{}, :name pirates.client.map, :imports nil, :requires {reagent reagent.core, towns pirates.client.towns, scene pirates.client.scene, keyboard pirates.client.keyboard, reagent.core reagent.core, pirates.client.keyboard pirates.client.keyboard, scenery pirates.client.scenery, pirates.client.towns pirates.client.towns, pirates.client.scene pirates.client.scene, pirates.client.scenery pirates.client.scenery, cljsjs.three cljsjs.three}, :uses nil, :defs {create-renderer {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/map.cljs", :line 10, :column 7, :end-line 10, :end-column 22, :arglists (quote ([element]))}, :name pirates.client.map/create-renderer, :variadic false, :file "src/pirates/client/map.cljs", :end-column 22, :method-params ([element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([element]))}, map-mouse {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/map.cljs", :line 15, :column 7, :end-line 15, :end-column 16, :arglists (quote ([ship e]))}, :name pirates.client.map/map-mouse, :variadic false, :file "src/pirates/client/map.cljs", :end-column 16, :method-params ([ship e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ship e]))}, world-map {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/map.cljs", :line 21, :column 7, :end-line 21, :end-column 16, :arglists (quote ([app-state]))}, :name pirates.client.map/world-map, :variadic false, :file "src/pirates/client/map.cljs", :end-column 16, :method-params ([app-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app-state]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:unselectable :uid :component-did-mount :width :on-blur :cursor :on-wheel :on-mouse-down :on-click :canvas :style :reagent-render :on-mouse-move :component-will-unmount :camera :display-name :position :on-mouse-up :towns}, :order [:uid :towns :display-name :reagent-render :component-did-mount :component-will-unmount :camera :position :canvas :style :unselectable :on-click :on-wheel :on-mouse-down :on-mouse-up :on-blur :on-mouse-move :cursor :width]}, :doc nil}