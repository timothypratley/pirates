;; Analyzed by ClojureScript 1.8.34
{:use-macros {defcard-rg devcards.core}, :excludes #{}, :name pirates.client.interpolate, :imports nil, :requires {devcards.core devcards.core}, :uses nil, :defs {forward {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/interpolate.cljs", :line 5, :column 7, :end-line 5, :end-column 14, :arglists (quote ([vector2 heading t]))}, :name pirates.client.interpolate/forward, :variadic false, :file "/Users/timothypratley/git/pirates/src/pirates/client/interpolate.cljs", :end-column 14, :method-params ([vector2 heading t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists (quote ([vector2 heading t]))}, bezier {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/interpolate.cljs", :line 11, :column 7, :end-line 11, :end-column 13, :arglists (quote ([a heading1 d heading2 t]))}, :name pirates.client.interpolate/bezier, :variadic false, :file "/Users/timothypratley/git/pirates/src/pirates/client/interpolate.cljs", :end-column 13, :method-params ([a heading1 d heading2 t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 5, :fn-var true, :arglists (quote ([a heading1 d heading2 t]))}, predict {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/interpolate.cljs", :line 28, :column 7, :end-line 28, :end-column 14, :arglists (quote ([[x1 z1 heading1] [x2 z2 heading2] at]))}, :name pirates.client.interpolate/predict, :variadic false, :file "/Users/timothypratley/git/pirates/src/pirates/client/interpolate.cljs", :end-column 14, :method-params ([p__83147 p__83148 at]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([[x1 z1 heading1] [x2 z2 heading2] at]))}, t_pirates$client$interpolate83153 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name pirates.client.interpolate/t_pirates$client$interpolate83153, :file "/Users/timothypratley/git/pirates/src/pirates/client/interpolate.cljs", :type true, :anonymous true, :column 1, :line 39, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_pirates$client$interpolate83153 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta83154])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name pirates.client.interpolate/->t_pirates$client$interpolate83153, :variadic false, :file "/Users/timothypratley/git/pirates/src/pirates/client/interpolate.cljs", :method-params ([meta83154]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta83154])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_pirates$client$interpolate83165 {:num-fields 1, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name pirates.client.interpolate/t_pirates$client$interpolate83165, :file "/Users/timothypratley/git/pirates/src/pirates/client/interpolate.cljs", :type true, :anonymous true, :column 1, :line 61, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_pirates$client$interpolate83165 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta83166])), :file nil}, :protocols #{cljs.core/IMeta cljs.core/IWithMeta devcards.core/IDevcardOptions}, :name pirates.client.interpolate/->t_pirates$client$interpolate83165, :variadic false, :file "/Users/timothypratley/git/pirates/src/pirates/client/interpolate.cljs", :method-params ([meta83166]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta83166])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {devcards.core devcards.core}, :cljs.analyzer/constants {:seen #{:path :predict-example :bezier-example :stroke meta83166 :transform :key :func :name meta83154 :view-box :documentation :stroke-linecap :g :main-obj :line :stroke-width :watch-atom :initial-data :pirates.client.interpolate :svg :d :options :x1 :x2}, :order [:path :func :pirates.client.interpolate :bezier-example :name :documentation :main-obj :initial-data :options :svg :view-box :g :transform :d :line :x1 :x2 :stroke :stroke-width :stroke-linecap :key meta83154 :watch-atom :predict-example meta83166]}, :doc nil}