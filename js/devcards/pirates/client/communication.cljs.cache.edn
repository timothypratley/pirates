;; Analyzed by ClojureScript 1.8.34
{:use-macros nil, :excludes #{}, :name pirates.client.communication, :imports nil, :requires {log pirates.client.logging, pirates.client.logging pirates.client.logging, model pirates.client.model, pirates.client.model pirates.client.model, sente taoensso.sente, taoensso.sente taoensso.sente}, :uses nil, :defs {chsk-send! {:name pirates.client.communication/chsk-send!, :file "src/pirates/client/communication.cljs", :line 53, :column 5, :end-line 53, :end-column 20, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/communication.cljs", :line 53, :column 10, :end-line 53, :end-column 20}}, event-msg-handler {:name pirates.client.communication/event-msg-handler, :file "src/pirates/client/communication.cljs", :line 9, :column 1, :end-line 9, :end-column 28, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/communication.cljs", :line 9, :column 11, :end-line 9, :end-column 28}}, event-msg-handler* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/communication.cljs", :line 11, :column 7, :end-line 11, :end-column 25, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}]))}, :name pirates.client.communication/event-msg-handler*, :variadic false, :file "src/pirates/client/communication.cljs", :end-column 25, :method-params ([p__77490]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}]))}, maybe-send-viewpoint {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/communication.cljs", :line 42, :column 7, :end-line 42, :end-column 27, :arglists (quote ([k r a b]))}, :name pirates.client.communication/maybe-send-viewpoint, :variadic false, :file "src/pirates/client/communication.cljs", :end-column 27, :method-params ([k r a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 4, :fn-var true, :arglists (quote ([k r a b]))}, start {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/src/pirates/client/communication.cljs", :line 50, :column 7, :end-line 50, :end-column 12, :arglists (quote ([]))}, :name pirates.client.communication/start, :variadic false, :file "src/pirates/client/communication.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:first-open? :chsk/recv :ch-recv :default :uid :type :chsk/state :state :host :event :id :at :?data :players :chsk :send-fn :hierarchy :auto :user :pirates/status :chsk/handshake}, :order [:hierarchy :id :default :?data :event :chsk/state :first-open? :chsk/recv :players :at :chsk/handshake :uid :user :type :host :auto :chsk :ch-recv :send-fn :state :pirates/status]}, :doc nil}