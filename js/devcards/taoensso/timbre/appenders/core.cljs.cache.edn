;; Analyzed by ClojureScript 1.8.34
{:use-macros {have taoensso.encore, have? taoensso.encore}, :excludes #{}, :name taoensso.timbre.appenders.core, :imports nil, :requires {str clojure.string, clojure.string clojure.string, enc taoensso.encore, taoensso.encore taoensso.encore}, :uses nil, :defs {println-appender {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/timbre/appenders/core.cljs", :line 68, :column 7, :end-line 68, :end-column 23, :arglists (quote ([& [_opts]])), :doc "Returns a simple `println` appender for Clojure/Script.\n  Use with ClojureScript requires that `cljs.core/*print-fn*` be set.\n\n  :stream (clj only) - e/o #{:auto :*out* :*err* :std-err :std-out <io-stream>}.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([_opts])], :arglists ([& [_opts]]), :arglists-meta (nil)}}, :name taoensso.timbre.appenders.core/println-appender, :variadic true, :file "resources/public/js/devcards/taoensso/timbre/appenders/core.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([_opts])], :arglists ([& [_opts]]), :arglists-meta (nil)}, :method-params [([_opts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 0, :fn-var true, :arglists ([& [_opts]]), :doc "Returns a simple `println` appender for Clojure/Script.\n  Use with ClojureScript requires that `cljs.core/*print-fn*` be set.\n\n  :stream (clj only) - e/o #{:auto :*out* :*err* :std-err :std-out <io-stream>}."}, console-appender {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/timbre/appenders/core.cljs", :line 136, :column 7, :end-line 136, :end-column 23, :arglists (quote ([& [{:keys [raw-output?]}]])), :doc "Returns a simple js/console appender for ClojureScript.\n\n  For accurate line numbers in Chrome, add these Blackbox[1] patterns:\n    `/taoensso/timbre/appenders/core\\.js$`\n    `/taoensso/timbre\\.js$`\n    `/cljs/core\\.js$`\n\n  [1] Ref. https://goo.gl/ZejSvR", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([{:keys [raw-output?]}])], :arglists ([& [{:keys [raw-output?]}]]), :arglists-meta (nil)}}, :name taoensso.timbre.appenders.core/console-appender, :variadic true, :file "resources/public/js/devcards/taoensso/timbre/appenders/core.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([{:keys [raw-output?]}])], :arglists ([& [{:keys [raw-output?]}]]), :arglists-meta (nil)}, :method-params [([{:keys [raw-output?]}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 0, :fn-var true, :arglists ([& [{:keys [raw-output?]}]]), :doc "Returns a simple js/console appender for ClojureScript.\n\n  For accurate line numbers in Chrome, add these Blackbox[1] patterns:\n    `/taoensso/timbre/appenders/core\\.js$`\n    `/taoensso/timbre\\.js$`\n    `/cljs/core\\.js$`\n\n  [1] Ref. https://goo.gl/ZejSvR"}, console-?appender {:name taoensso.timbre.appenders.core/console-?appender, :file "resources/public/js/devcards/taoensso/timbre/appenders/core.cljs", :line 189, :column 8, :end-line 189, :end-column 30, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/timbre/appenders/core.cljs", :line 189, :column 13, :end-line 189, :end-column 30}, :doc "DEPRECATED"}}, :require-macros {enc taoensso.encore, taoensso.encore taoensso.encore}, :cljs.analyzer/constants {:seen #{:inherit :report :fn :timbre/raw :rate-limit :msg_ :warn :trace :raw-output? :debug :enabled? :fatal :level :output-fn :vargs_ :info :min-level :error :?err_ :async?}, :order [:enabled? :async? :min-level :rate-limit :output-fn :fn :inherit :raw-output? :trace :debug :info :warn :error :fatal :report :level :vargs_ :timbre/raw :msg_ :?err_]}, :doc "Core Timbre appenders without any special dependency requirements.\n  These can be aliased into the main Timbre ns for convenience."}