;; Analyzed by ClojureScript 1.8.34
{:use-macros {-invariant1 taoensso.truss.impl, catch-errors* taoensso.truss.impl}, :excludes #{}, :name taoensso.truss.impl, :imports nil, :requires {set clojure.set, clojure.set clojure.set}, :uses nil, :defs {set* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 33, :column 7, :end-line 33, :end-column 11, :arglists (quote ([x]))}, :name taoensso.truss.impl/set*, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, -xpred {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 59, :column 7, :end-line 59, :end-column 13, :arglists (quote ([pred])), :doc "Expands any special predicate forms and returns [<expanded-pred> <non-throwing?>]"}, :name taoensso.truss.impl/-xpred, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 13, :method-params ([pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pred])), :doc "Expands any special predicate forms and returns [<expanded-pred> <non-throwing?>]"}, -invar-violation! {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 122, :column 7, :end-line 122, :end-column 24, :arglists (quote ([] [assertion? ns-str ?line form val ?err ?data-fn])), :top-fn {:variadic false, :max-fixed-arity 7, :method-params ([] [assertion? ns-str ?line form val ?err ?data-fn]), :arglists ([] [assertion? ns-str ?line form val ?err ?data-fn]), :arglists-meta (nil nil)}}, :name taoensso.truss.impl/-invar-violation!, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 24, :top-fn {:variadic false, :max-fixed-arity 7, :method-params ([] [assertion? ns-str ?line form val ?err ?data-fn]), :arglists ([] [assertion? ns-str ?line form val ?err ?data-fn]), :arglists-meta (nil nil)}, :method-params ([] [assertion? ns-str ?line form val ?err ?data-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 7, :fn-var true, :arglists ([] [assertion? ns-str ?line form val ?err ?data-fn])}, *-?data* {:name taoensso.truss.impl/*-?data*, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :line 43, :column 1, :end-line 43, :end-column 24, :dynamic true, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 43, :column 16, :end-line 43, :end-column 24, :dynamic true}}, -invar-undefined-val {:name taoensso.truss.impl/-invar-undefined-val, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :line 121, :column 1, :end-line 121, :end-column 27, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 121, :column 7, :end-line 121, :end-column 27}}, non-throwing? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 46, :column 8, :end-line 46, :end-column 21, :private true, :arglists (quote ([p])), :doc "Returns true for some common preds that are naturally non-throwing"}, :private true, :name taoensso.truss.impl/non-throwing?, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 21, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Returns true for some common preds that are naturally non-throwing"}, now-dt {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 39, :column 7, :end-line 39, :end-column 13, :arglists (quote ([]))}, :name taoensso.truss.impl/now-dt, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, nnil? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 31, :column 7, :end-line 31, :end-column 12, :arglists (quote ([x]))}, :name taoensso.truss.impl/nnil?, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ks-nnil? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 37, :column 7, :end-line 37, :end-column 15, :arglists (quote ([ks m]))}, :name taoensso.truss.impl/ks-nnil?, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 15, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, revery? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 29, :column 7, :end-line 29, :end-column 14, :arglists (quote ([pred coll]))}, :name taoensso.truss.impl/revery?, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 14, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll]))}, rsome {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 28, :column 7, :end-line 28, :end-column 12, :arglists (quote ([pred coll]))}, :name taoensso.truss.impl/rsome, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 12, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll]))}, ks<= {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 35, :column 7, :end-line 35, :end-column 11, :arglists (quote ([ks m]))}, :name taoensso.truss.impl/ks<=, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 11, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, -assertion-error {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 120, :column 7, :end-line 120, :end-column 23, :arglists (quote ([msg]))}, :name taoensso.truss.impl/-assertion-error, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 23, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, ks= {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 34, :column 7, :end-line 34, :end-column 10, :arglists (quote ([ks m]))}, :name taoensso.truss.impl/ks=, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 10, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, non-throwing {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 45, :column 8, :end-line 45, :end-column 20, :arglists (quote ([pred]))}, :name taoensso.truss.impl/non-throwing, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 20, :method-params ([pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pred]))}, ks>= {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/truss/impl.cljs", :line 36, :column 7, :end-line 36, :end-column 11, :arglists (quote ([ks m]))}, :name taoensso.truss.impl/ks>=, :variadic false, :file "resources/public/js/devcards/taoensso/truss/impl.cljs", :end-column 11, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}}, :require-macros {impl-macros taoensso.truss.impl, taoensso.truss.impl taoensso.truss.impl}, :cljs.analyzer/constants {:seen #{:*?data* set/superset? taoensso.truss.impl/set* cljs.core/= :invariant-violation? :else :elidable? :dt taoensso.truss.impl/ks= :val :ns-str taoensso.truss.impl/ks-nnil? cljs.core/contains? set/subset? :invariant/undefined-val taoensso.truss.impl/ks<= taoensso.truss.impl/non-throwing :val-type :?err :*assert* :data-error undefined/threw-error cljs.core/fn :?data :?line cljs.core/not __x cljs.core/and :form-str taoensso.truss.impl/ks>= cljs.core/or}, :order [:else cljs.core/fn __x cljs.core/contains? taoensso.truss.impl/set* taoensso.truss.impl/ks-nnil? taoensso.truss.impl/ks<= taoensso.truss.impl/ks= taoensso.truss.impl/ks>= cljs.core/not set/subset? set/superset? cljs.core/= taoensso.truss.impl/non-throwing cljs.core/and cljs.core/or :invariant/undefined-val :invariant-violation? :data-error :*?data* :elidable? :dt :val :ns-str :val-type :?err :*assert* :?data :?line :form-str undefined/threw-error]}, :doc "Private implementation details"}