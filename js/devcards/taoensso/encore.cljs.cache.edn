;; Analyzed by ClojureScript 1.8.34
{:use-macros {have taoensso.encore, compile-if taoensso.encore, have! taoensso.encore, have? taoensso.encore, catch-errors* taoensso.encore, catch-errors taoensso.encore}, :excludes #{}, :name taoensso.encore, :imports nil, :requires {goog.net.XhrIoPool goog.net.XhrIoPool, gevents goog.events, set clojure.set, cljs.tools.reader.edn cljs.tools.reader.edn, taoensso.truss taoensso.truss, goog.net.XhrIo goog.net.XhrIo, gquery-data goog.Uri.QueryData, goog.string goog.string, goog.Uri.QueryData goog.Uri.QueryData, gobj goog.object, goog.object goog.object, gxhr-pool goog.net.XhrIoPool, goog.string.StringBuffer goog.string.StringBuffer, truss taoensso.truss, goog.net.EventType goog.net.EventType, clojure.set clojure.set, goog.structs goog.structs, goog.string.format goog.string.format, gstructs goog.structs, str clojure.string, clojure.string clojure.string, cljs.reader cljs.reader, gstr goog.string, edn cljs.tools.reader.edn, goog.events goog.events, goog.net.ErrorCode goog.net.ErrorCode, gxhr goog.net.XhrIo}, :uses nil, :defs {encore-version {:name taoensso.encore/encore-version, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 47, :column 1, :end-line 47, :end-column 21, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 47, :column 7, :end-line 47, :end-column 21}, :doc "Used for lib-consumer version assertions"}, memoize-a1_ {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1563, :column 7, :end-line 1563, :end-column 18, :arglists (quote ([f])), :doc "Fastest possible 0/1-arg `memoize_`"}, :name taoensso.encore/memoize-a1_, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1563, :end-line 1563, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "Fastest possible 0/1-arg `memoize_`"}, removev {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 990, :column 7, :end-line 990, :end-column 14, :arglists (quote ([pred coll]))}, :name taoensso.encore/removev, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 990, :end-line 990, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll]))}, nneg-int? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 346, :column 7, :end-line 346, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nneg-int?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 346, :end-line 346, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, error? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 255, :column 13, :end-line 255, :end-column 19, :arglists (quote ([x]))}, :name taoensso.encore/error?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 7, :line 255, :end-line 255, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ->?singleton {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 625, :column 7, :end-line 625, :end-column 19, :arglists (quote ([coll]))}, :name taoensso.encore/->?singleton, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 625, :end-line 625, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, set* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 614, :column 7, :end-line 614, :end-column 11, :arglists (quote ([x]))}, :name taoensso.encore/set*, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 614, :end-line 614, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sayp {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2071, :column 9, :end-line 2071, :end-column 13, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/sayp, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2071, :end-line 2071, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, now-udt {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 537, :column 8, :end-line 537, :end-column 15, :arglists (quote ([]))}, :name taoensso.encore/now-udt, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 537, :end-line 537, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, as-?kw {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 362, :column 7, :end-line 362, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/as-?kw, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 362, :end-line 362, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, url-decode {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2317, :column 7, :end-line 2317, :end-column 17, :arglists (quote ([s & [encoding]])), :doc "Stolen from http://goo.gl/99NSR1", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [encoding])], :arglists ([s & [encoding]]), :arglists-meta (nil)}}, :name taoensso.encore/url-decode, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [encoding])], :arglists ([s & [encoding]]), :arglists-meta (nil)}, :method-params [(s [encoding])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2317, :end-line 2317, :max-fixed-arity 1, :fn-var true, :arglists ([s & [encoding]]), :doc "Stolen from http://goo.gl/99NSR1"}, str-builder? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1208, :column 7, :end-line 1208, :end-column 19, :arglists (quote ([x]))}, :name taoensso.encore/str-builder?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1208, :end-line 1208, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, parse-query-params {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2348, :column 7, :end-line 2348, :end-column 25, :arglists (quote ([s & [keywordize? encoding]])), :doc "Based on `ring-codec/form-decode`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [keywordize? encoding])], :arglists ([s & [keywordize? encoding]]), :arglists-meta (nil)}}, :name taoensso.encore/parse-query-params, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [keywordize? encoding])], :arglists ([s & [keywordize? encoding]]), :arglists-meta (nil)}, :method-params [(s [keywordize? encoding])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2348, :end-line 2348, :max-fixed-arity 1, :fn-var true, :arglists ([s & [keywordize? encoding]]), :doc "Based on `ring-codec/form-decode`"}, dissoc-in {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 807, :column 7, :end-line 807, :end-column 16, :arglists (quote ([m ks & dissoc-ks])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(m ks dissoc-ks)], :arglists ([m ks & dissoc-ks]), :arglists-meta (nil)}}, :name taoensso.encore/dissoc-in, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(m ks dissoc-ks)], :arglists ([m ks & dissoc-ks]), :arglists-meta (nil)}, :method-params [(m ks dissoc-ks)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 807, :end-line 807, :max-fixed-arity 2, :fn-var true, :arglists ([m ks & dissoc-ks])}, platform-cas! {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1121, :column 8, :end-line 1121, :end-column 21, :private true, :arglists (quote ([atom_ old-val new-val])), :doc "Minor optimization for single-threaded Cljs"}, :private true, :name taoensso.encore/platform-cas!, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 21, :method-params ([atom_ old-val new-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1121, :end-line 1121, :max-fixed-arity 3, :fn-var true, :arglists (quote ([atom_ old-val new-val])), :doc "Minor optimization for single-threaded Cljs"}, norm-word-breaks {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1388, :column 7, :end-line 1388, :end-column 23, :arglists (quote ([s])), :doc "Converts all word breaks of any form and length (including line breaks of any\n  form, tabs, spaces, etc.) to a single regular space"}, :name taoensso.encore/norm-word-breaks, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1388, :end-line 1388, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Converts all word breaks of any form and length (including line breaks of any\n  form, tabs, spaces, etc.) to a single regular space"}, rcompare {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1007, :column 14, :end-line 1007, :end-column 22, :arglists (quote ([x y])), :doc "Reverse comparator"}, :name taoensso.encore/rcompare, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 22, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 8, :line 1007, :end-line 1007, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "Reverse comparator"}, Swapped {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name taoensso.encore/Swapped, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 1060, :record true, :end-line 1060, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ms {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 540, :column 7, :end-line 540, :end-column 9, :arglists (quote ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}])), :doc "Returns ~number of milliseconds in period defined by given args", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :arglists-meta (nil)}}, :name taoensso.encore/ms, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :arglists-meta (nil)}, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 540, :end-line 540, :max-fixed-arity 0, :fn-var true, :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :doc "Returns ~number of milliseconds in period defined by given args"}, str-ends-with? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1333, :column 7, :end-line 1333, :end-column 21, :arglists (quote ([s substr]))}, :name taoensso.encore/str-ends-with?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 21, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1333, :end-line 1333, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, nested-merge {:name taoensso.encore/nested-merge, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 1028, :column 1, :end-line 1028, :end-column 18, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1028, :column 6, :end-line 1028, :end-column 18}}, rate-limited {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2440, :column 7, :end-line 2440, :end-column 19, :arglists (quote ([ncalls-limit window-ms f]))}, :name taoensso.encore/rate-limited, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([ncalls-limit window-ms f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2440, :end-line 2440, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ncalls-limit window-ms f]))}, format-query-string {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2325, :column 7, :end-line 2325, :end-column 26, :arglists (quote ([m]))}, :name taoensso.encore/format-query-string, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 26, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2325, :end-line 2325, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, is! {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1421, :column 7, :end-line 1421, :end-column 10, :arglists (quote ([x] [pred x])), :doc "Experimental. Cheaper `have!` alt that provides less diagnostic info.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [pred x]), :arglists ([x] [pred x]), :arglists-meta (nil nil)}}, :name taoensso.encore/is!, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [pred x]), :arglists ([x] [pred x]), :arglists-meta (nil nil)}, :method-params ([x] [pred x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1421, :end-line 1421, :max-fixed-arity 2, :fn-var true, :arglists ([x] [pred x]), :doc "Experimental. Cheaper `have!` alt that provides less diagnostic info."}, log {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2068, :column 9, :end-line 2068, :end-column 12, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/log, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2068, :end-line 2068, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, nano-time {:name taoensso.encore/nano-time, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 1993, :column 1, :end-line 1993, :end-column 15, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1993, :column 6, :end-line 1993, :end-column 15}}, clamp {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 479, :column 7, :end-line 479, :end-column 12, :arglists (quote ([nmin nmax n]))}, :name taoensso.encore/clamp, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :method-params ([nmin nmax n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 479, :end-line 479, :max-fixed-arity 3, :fn-var true, :arglists (quote ([nmin nmax n]))}, memoized {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1592, :column 7, :end-line 1592, :end-column 15, :arglists (quote ([cache f & args])), :doc "Like `(memoize* f)` but takes an explicit cache atom (possibly nil)\n  and immediately applies memoized f to given arguments", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(cache f args)], :arglists ([cache f & args]), :arglists-meta (nil)}}, :name taoensso.encore/memoized, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(cache f args)], :arglists ([cache f & args]), :arglists-meta (nil)}, :method-params [(cache f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1592, :end-line 1592, :max-fixed-arity 2, :fn-var true, :arglists ([cache f & args]), :doc "Like `(memoize* f)` but takes an explicit cache atom (possibly nil)\n  and immediately applies memoized f to given arguments"}, log? {:name taoensso.encore/log?, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2452, :column 3, :end-line 2452, :end-column 22, :private true, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2452, :column 18, :end-line 2452, :end-column 22, :private true}}, greatest {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2464, :column 7, :end-line 2464, :end-column 15, :arglists (quote ([coll & [?comparator]])), :doc "Deprecated", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}}, :name taoensso.encore/greatest, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}, :method-params [(coll [?comparator])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2464, :end-line 2464, :max-fixed-arity 1, :fn-var true, :arglists ([coll & [?comparator]]), :doc "Deprecated"}, str-join {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1241, :column 9, :end-line 1241, :end-column 17, :arglists (quote ([coll] [separator coll] [separator xform coll])), :doc "Faster, transducer-based generalization of `clojure.string/join` with `xform`\n    support", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([coll] [separator coll] [separator xform coll]), :arglists ([coll] [separator coll] [separator xform coll]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/str-join, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([coll] [separator coll] [separator xform coll]), :arglists ([coll] [separator coll] [separator xform coll]), :arglists-meta (nil nil nil)}, :method-params ([coll] [separator coll] [separator xform coll]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 3, :line 1241, :end-line 1241, :max-fixed-arity 3, :fn-var true, :arglists ([coll] [separator coll] [separator xform coll]), :doc "Faster, transducer-based generalization of `clojure.string/join` with `xform`\n    support"}, merge-keywords {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 430, :column 7, :end-line 430, :end-column 21, :arglists (quote ([ks & [no-slash?]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ks [no-slash?])], :arglists ([ks & [no-slash?]]), :arglists-meta (nil)}}, :name taoensso.encore/merge-keywords, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ks [no-slash?])], :arglists ([ks & [no-slash?]]), :arglists-meta (nil)}, :method-params [(ks [no-slash?])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 430, :end-line 430, :max-fixed-arity 1, :fn-var true, :arglists ([ks & [no-slash?]])}, queue* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 834, :column 7, :end-line 834, :end-column 13, :arglists (quote ([& items])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(items)], :arglists ([& items]), :arglists-meta (nil)}}, :name taoensso.encore/queue*, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(items)], :arglists ([& items]), :arglists-meta (nil)}, :method-params [(items)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 834, :end-line 834, :max-fixed-arity 0, :fn-var true, :arglists ([& items])}, atom? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 321, :column 7, :end-line 321, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/atom?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, chan? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 327, :column 9, :end-line 327, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/chan?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 327, :end-line 327, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, keywordize-map {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 885, :column 7, :end-line 885, :end-column 21, :arglists (quote ([m]))}, :name taoensso.encore/keywordize-map, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 21, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 885, :end-line 885, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, subvec* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 752, :column 7, :end-line 752, :end-column 14, :arglists (quote ([v start-idx & [?max-len]])), :doc "Like `subvec` but uses `sub-indexes`", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(v start-idx [?max-len])], :arglists ([v start-idx & [?max-len]]), :arglists-meta (nil)}}, :name taoensso.encore/subvec*, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(v start-idx [?max-len])], :arglists ([v start-idx & [?max-len]]), :arglists-meta (nil)}, :method-params [(v start-idx [?max-len])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 752, :end-line 752, :max-fixed-arity 2, :fn-var true, :arglists ([v start-idx & [?max-len]]), :doc "Like `subvec` but uses `sub-indexes`"}, logf {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2070, :column 9, :end-line 2070, :end-column 13, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/logf, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2070, :end-line 2070, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, reportf {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2462, :column 9, :end-line 2462, :end-column 16, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/reportf, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2462, :end-line 2462, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, str-?index {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1340, :column 7, :end-line 1340, :end-column 17, :arglists (quote ([s substr & [start-idx last?]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s substr [start-idx last?])], :arglists ([s substr & [start-idx last?]]), :arglists-meta (nil)}}, :name taoensso.encore/str-?index, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s substr [start-idx last?])], :arglists ([s substr & [start-idx last?]]), :arglists-meta (nil)}, :method-params [(s substr [start-idx last?])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1340, :end-line 1340, :max-fixed-arity 2, :fn-var true, :arglists ([s substr & [start-idx last?]])}, as-?name {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 363, :column 7, :end-line 363, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-?name, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 363, :end-line 363, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, udt? {:name taoensso.encore/udt?, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 350, :column 1, :end-line 350, :end-column 10, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 350, :column 6, :end-line 350, :end-column 10}}, as-kw {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 405, :column 7, :end-line 405, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/as-kw, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 405, :end-line 405, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, fatalf {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2461, :column 9, :end-line 2461, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/fatalf, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2461, :end-line 2461, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, distinct-elements? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 353, :column 7, :end-line 353, :end-column 25, :arglists (quote ([x]))}, :name taoensso.encore/distinct-elements?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 25, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 353, :end-line 353, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nneg? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 344, :column 11, :end-line 344, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nneg?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 344, :end-line 344, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, gc-now? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1530, :column 7, :end-line 1530, :end-column 14, :arglists (quote ([]))}, :name taoensso.encore/gc-now?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1530, :end-line 1530, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, as-name {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 406, :column 7, :end-line 406, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-name, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 406, :end-line 406, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ajax-lite {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2117, :column 7, :end-line 2117, :end-column 16, :arglists (quote ([uri {:keys [method params headers timeout-ms resp-type with-credentials? progress-fn errorf], :as opts, :or {method :get, timeout-ms 10000, resp-type :auto, errorf logf}} callback])), :doc "Alpha - subject to change.\n  Simple+lightweight Ajax via Google Closure. Returns nil, or the xhr instance.\n  Ref. https://developers.google.com/closure/library/docs/xhrio.\n\n  (ajax-lite \"/my-post-route\"\n    {:method     :post\n     :params     {:username \"Rich Hickey\"\n                  :type     \"Awesome\"}\n     :headers    {\"Foo\" \"Bar\"}\n     :resp-type  :text\n     :timeout-ms 7000\n     :with-credentials? false ; Enable if using CORS (requires xhr v2+)\n    }\n    (fn async-callback [resp-map]\n      (let [{:keys [success? ?status ?error ?content ?content-type]} resp-map]\n        ;; ?status  - 200, 404, ..., or nil on no response\n        ;; ?error   - e/o #{:xhr-pool-depleted :exception :http-error :abort\n        ;;                  :timeout :no-content <http-error-status> nil}\n        (js/alert (str \"Ajax response: \" resp-map)))))"}, :name taoensso.encore/ajax-lite, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([uri p__41264 callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2117, :end-line 2117, :max-fixed-arity 3, :fn-var true, :arglists (quote ([uri {:keys [method params headers timeout-ms resp-type with-credentials? progress-fn errorf], :as opts, :or {method :get, timeout-ms 10000, resp-type :auto, errorf logf}} callback])), :doc "Alpha - subject to change.\n  Simple+lightweight Ajax via Google Closure. Returns nil, or the xhr instance.\n  Ref. https://developers.google.com/closure/library/docs/xhrio.\n\n  (ajax-lite \"/my-post-route\"\n    {:method     :post\n     :params     {:username \"Rich Hickey\"\n                  :type     \"Awesome\"}\n     :headers    {\"Foo\" \"Bar\"}\n     :resp-type  :text\n     :timeout-ms 7000\n     :with-credentials? false ; Enable if using CORS (requires xhr v2+)\n    }\n    (fn async-callback [resp-map]\n      (let [{:keys [success? ?status ?error ?content ?content-type]} resp-map]\n        ;; ?status  - 200, 404, ..., or nil on no response\n        ;; ?error   - e/o #{:xhr-pool-depleted :exception :http-error :abort\n        ;;                  :timeout :no-content <http-error-status> nil}\n        (js/alert (str \"Ajax response: \" resp-map)))))"}, distinct-by {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 956, :column 7, :end-line 956, :end-column 18, :arglists (quote ([keyfn coll]))}, :name taoensso.encore/distinct-by, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([keyfn coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 956, :end-line 956, :max-fixed-arity 2, :fn-var true, :arglists (quote ([keyfn coll]))}, nvec? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 347, :column 9, :end-line 347, :end-column 14, :arglists (quote ([n x]))}, :name taoensso.encore/nvec?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([n x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 347, :end-line 347, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n x]))}, path {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1368, :column 7, :end-line 1368, :end-column 11, :arglists (quote ([& parts])), :doc "Joins string paths (URLs, file paths, etc.) ensuring correct \"/\"\n  interposition", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(parts)], :arglists ([& parts]), :arglists-meta (nil)}}, :name taoensso.encore/path, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(parts)], :arglists ([& parts]), :arglists-meta (nil)}, :method-params [(parts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1368, :end-line 1368, :max-fixed-arity 0, :fn-var true, :arglists ([& parts]), :doc "Joins string paths (URLs, file paths, etc.) ensuring correct \"/\"\n  interposition"}, contains-in? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 806, :column 7, :end-line 806, :end-column 19, :arglists (quote ([coll ks]))}, :name taoensso.encore/contains-in?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([coll ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 806, :end-line 806, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll ks]))}, nil->sentinel {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 768, :column 9, :end-line 768, :end-column 22, :arglists (quote ([x]))}, :name taoensso.encore/nil->sentinel, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 768, :end-line 768, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, filter-kvs {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 865, :column 7, :end-line 865, :end-column 17, :arglists (quote ([predk predv m]))}, :name taoensso.encore/filter-kvs, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :method-params ([predk predv m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 865, :end-line 865, :max-fixed-arity 3, :fn-var true, :arglists (quote ([predk predv m]))}, swap-in! {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1127, :column 7, :end-line 1127, :end-column 15, :arglists (quote ([atom_ ks f] [atom_ ks f & more])), :doc "More powerful version of `swap!`:\n    * Supports optional `update-in` semantics.\n    * Swap fn can return `(swapped <new-val> <return-val>)` rather than just\n      <new-val>. This is useful when writing atomic pull fns, etc.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks f]), :arglists ([atom_ ks f] [atom_ ks f & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/swap-in!, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks f]), :arglists ([atom_ ks f] [atom_ ks f & more]), :arglists-meta (nil nil)}, :method-params ([atom_ ks f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1127, :end-line 1127, :max-fixed-arity 3, :fn-var true, :arglists ([atom_ ks f] [atom_ ks f & more]), :doc "More powerful version of `swap!`:\n    * Supports optional `update-in` semantics.\n    * Swap fn can return `(swapped <new-val> <return-val>)` rather than just\n      <new-val>. This is useful when writing atomic pull fns, etc."}, warnf {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2459, :column 9, :end-line 2459, :end-column 14, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/warnf, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2459, :end-line 2459, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, memoize* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1600, :column 7, :end-line 1600, :end-column 15, :arglists (quote ([f] [ttl-ms f] [cache-size ttl-ms f])), :doc "Like `clojure.core/memoize` but:\n    * Can be significantly faster (depends on opts)\n    * Uses delays to prevent race conditions on writes\n    * Supports auto invalidation & gc with `ttl-ms` option\n    * Supports cache size limit & gc with `cache-size` option\n    * Supports manual invalidation by prepending args with `:mem/del` or `:mem/fresh`", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/memoize*, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists-meta (nil nil nil)}, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 1600, :end-line 1600, :max-fixed-arity 3, :fn-var true, :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :doc "Like `clojure.core/memoize` but:\n    * Can be significantly faster (depends on opts)\n    * Uses delays to prevent race conditions on writes\n    * Supports auto invalidation & gc with `ttl-ms` option\n    * Supports cache size limit & gc with `cache-size` option\n    * Supports manual invalidation by prepending args with `:mem/del` or `:mem/fresh`"}, as-?nemail {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 395, :column 7, :end-line 395, :end-column 17, :arglists (quote ([?s]))}, :name taoensso.encore/as-?nemail, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :method-params ([?s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 395, :end-line 395, :max-fixed-arity 1, :fn-var true, :arglists (quote ([?s]))}, as-?email {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 394, :column 7, :end-line 394, :end-column 16, :arglists (quote ([?s]))}, :name taoensso.encore/as-?email, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([?s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 394, :end-line 394, :max-fixed-arity 1, :fn-var true, :arglists (quote ([?s]))}, spaced-str {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2400, :column 7, :end-line 2400, :end-column 17, :arglists (quote ([xs]))}, :name taoensso.encore/spaced-str, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2400, :end-line 2400, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs]))}, sentinel {:name taoensso.encore/sentinel, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 766, :column 3, :end-line 766, :end-column 16, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 766, :column 8, :end-line 766, :end-column 16}}, merge-deep {:name taoensso.encore/merge-deep, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2436, :column 1, :end-line 2436, :end-column 16, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2436, :column 6, :end-line 2436, :end-column 16}}, join-once {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1351, :column 7, :end-line 1351, :end-column 16, :arglists (quote ([separator & coll])), :doc "Like `clojure.string/join` but ensures no double separators", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(separator coll)], :arglists ([separator & coll]), :arglists-meta (nil)}}, :name taoensso.encore/join-once, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(separator coll)], :arglists ([separator & coll]), :arglists-meta (nil)}, :method-params [(separator coll)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1351, :end-line 1351, :max-fixed-arity 1, :fn-var true, :arglists ([separator & coll]), :doc "Like `clojure.string/join` but ensures no double separators"}, a0-memoize_ {:name taoensso.encore/a0-memoize_, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2395, :column 1, :end-line 2395, :end-column 17, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2395, :column 6, :end-line 2395, :end-column 17}}, sb-append {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1218, :column 6, :end-line 1218, :end-column 15}, :name taoensso.encore/sb-append, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([str-builder s]), :protocol-impl nil, :arglists-meta (), :column 1, :line 1218, :end-line 1218, :max-fixed-arity 2, :fn-var true, :arglists nil, :doc "For cross-platform string building"}, console-log {:name taoensso.encore/console-log, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2063, :column 3, :end-line 2063, :end-column 29, :private true, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2063, :column 18, :end-line 2063, :end-column 29, :private true}}, oget {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 617, :column 7, :end-line 617, :end-column 11, :arglists (quote ([o k] [o k1 k2] [o k1 k2 & ks])), :doc "Like `aget` for JS objects, Ref. https://goo.gl/eze8hY.\n  Unlike `aget`, returns nil for missing keys instead of throwing.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([o k] [o k1 k2]), :arglists ([o k] [o k1 k2] [o k1 k2 & ks]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/oget, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([o k] [o k1 k2]), :arglists ([o k] [o k1 k2] [o k1 k2 & ks]), :arglists-meta (nil nil nil)}, :method-params ([o k] [o k1 k2]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 617, :end-line 617, :max-fixed-arity 3, :fn-var true, :arglists ([o k] [o k1 k2] [o k1 k2 & ks]), :doc "Like `aget` for JS objects, Ref. https://goo.gl/eze8hY.\n  Unlike `aget`, returns nil for missing keys instead of throwing."}, as-qname {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 407, :column 7, :end-line 407, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-qname, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 407, :end-line 407, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, get-window-location {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2075, :column 7, :end-line 2075, :end-column 26, :arglists (quote ([])), :doc "Returns browser window's current location. These details can be forged!"}, :name taoensso.encore/get-window-location, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2075, :end-line 2075, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns browser window's current location. These details can be forged!"}, format {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1274, :column 7, :end-line 1274, :end-column 13, :arglists (quote ([fmt & args])), :doc "Like `clojure.core/format` but:\n    * Returns \"\" when fmt is nil rather than throwing an NPE.\n    * Formats nil as \"nil\" rather than \"null\".\n    * Provides ClojureScript support via goog.string.format (this has fewer\n      formatting options than Clojure's `format`!).", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}}, :name taoensso.encore/format, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}, :method-params [(fmt args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1274, :end-line 1274, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & args]), :doc "Like `clojure.core/format` but:\n    * Returns \"\" when fmt is nil rather than throwing an NPE.\n    * Formats nil as \"nil\" rather than \"null\".\n    * Provides ClojureScript support via goog.string.format (this has fewer\n      formatting options than Clojure's `format`!)."}, as-int {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 409, :column 7, :end-line 409, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/as-int, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 409, :end-line 409, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sentinel? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 767, :column 13, :end-line 767, :end-column 22, :arglists (quote ([x]))}, :name taoensso.encore/sentinel?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 767, :end-line 767, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nnil-set {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 638, :column 7, :end-line 638, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/nnil-set, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 638, :end-line 638, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, singleton? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 624, :column 9, :end-line 624, :end-column 19, :arglists (quote ([coll]))}, :name taoensso.encore/singleton?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 624, :end-line 624, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, swapped {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1061, :column 12, :end-line 1061, :end-column 19, :arglists (quote ([new-val return-val]))}, :name taoensso.encore/swapped, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([new-val return-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1061, :end-line 1061, :max-fixed-arity 2, :fn-var true, :arglists (quote ([new-val return-val]))}, as-nblank {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 404, :column 7, :end-line 404, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-nblank, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 404, :end-line 404, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, logging-level {:name taoensso.encore/logging-level, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2413, :column 1, :end-line 2413, :end-column 19, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2413, :column 6, :end-line 2413, :end-column 19}}, sub-indexes {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 706, :column 7, :end-line 706, :end-column 18, :arglists (quote ([x start-idx & {:keys [max-len end-idx]}])), :doc "Returns [<inclusive-start-idx*> <exclusive-end-idx*>] for counted 0-indexed\n  input (str, vec, etc.) with support for:\n    * Clamping of indexes beyond limits.\n    * Max-length -> end-index.\n    * -ive indexes (as +ive indexes but work from back of input):\n      (+0) (+1) (+2) (+3) (+4)  ; inclusive +ive indexes\n        h    e    l    l    o   ; 5 count\n      (-5) (-4) (-3) (-2) (-1)  ; inclusive -ive indexes", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(x start-idx {:keys [max-len end-idx]})], :arglists ([x start-idx & {:keys [max-len end-idx]}]), :arglists-meta (nil)}}, :name taoensso.encore/sub-indexes, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(x start-idx {:keys [max-len end-idx]})], :arglists ([x start-idx & {:keys [max-len end-idx]}]), :arglists-meta (nil)}, :method-params [(x start-idx {:keys [max-len end-idx]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 706, :end-line 706, :max-fixed-arity 2, :fn-var true, :arglists ([x start-idx & {:keys [max-len end-idx]}]), :doc "Returns [<inclusive-start-idx*> <exclusive-end-idx*>] for counted 0-indexed\n  input (str, vec, etc.) with support for:\n    * Clamping of indexes beyond limits.\n    * Max-length -> end-index.\n    * -ive indexes (as +ive indexes but work from back of input):\n      (+0) (+1) (+2) (+3) (+4)  ; inclusive +ive indexes\n        h    e    l    l    o   ; 5 count\n      (-5) (-4) (-3) (-2) (-1)  ; inclusive -ive indexes"}, undefined->nil {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1235, :column 14, :end-line 1235, :end-column 28, :arglists (quote ([x]))}, :name taoensso.encore/undefined->nil, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 28, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 8, :line 1235, :end-line 1235, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, memoize-a0_ {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1559, :column 7, :end-line 1559, :end-column 18, :arglists (quote ([f])), :doc "Fastest possible 0-arg `memoize_`"}, :name taoensso.encore/memoize-a0_, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1559, :end-line 1559, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "Fastest possible 0-arg `memoize_`"}, now-dt {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 536, :column 9, :end-line 536, :end-column 15, :arglists (quote ([]))}, :name taoensso.encore/now-dt, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 536, :end-line 536, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, repeatedly-into {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1043, :column 7, :end-line 1043, :end-column 22, :arglists (quote ([coll n f])), :doc "Like `repeatedly` but faster and `conj`s items into given collection"}, :name taoensso.encore/repeatedly-into, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 22, :method-params ([coll n f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1043, :end-line 1043, :max-fixed-arity 3, :fn-var true, :arglists (quote ([coll n f])), :doc "Like `repeatedly` but faster and `conj`s items into given collection"}, coerce-xhr-params {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2103, :column 8, :end-line 2103, :end-column 25, :private true, :arglists (quote ([uri method params])), :doc "[uri method get-or-post-params] -> [uri post-content]"}, :private true, :name taoensso.encore/coerce-xhr-params, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 25, :method-params ([uri method params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2103, :end-line 2103, :max-fixed-arity 3, :fn-var true, :arglists (quote ([uri method params])), :doc "[uri method get-or-post-params] -> [uri post-content]"}, nnil? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 342, :column 11, :end-line 342, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nnil?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 342, :end-line 342, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, memoize_ {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1544, :column 7, :end-line 1544, :end-column 15, :arglists (quote ([f])), :doc "Like `clojure.core/memoize` but faster, uses delays to avoid write races"}, :name taoensso.encore/memoize_, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1544, :end-line 1544, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "Like `clojure.core/memoize` but faster, uses delays to avoid write races"}, memoize-1 {:name taoensso.encore/memoize-1, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2404, :column 1, :end-line 2404, :end-column 15, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2404, :column 6, :end-line 2404, :end-column 15}}, str-contains? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1325, :column 7, :end-line 1325, :end-column 20, :arglists (quote ([s substr]))}, :name taoensso.encore/str-contains?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 20, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1325, :end-line 1325, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, swapped? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1062, :column 12, :end-line 1062, :end-column 20, :arglists (quote ([x]))}, :name taoensso.encore/swapped?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1062, :end-line 1062, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, as-map* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 893, :column 10, :end-line 893, :end-column 17, :private true, :arglists (quote ([kf vf kvs]))}, :private true, :name taoensso.encore/as-map*, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :method-params ([kf vf kvs]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 893, :end-line 893, :max-fixed-arity 3, :fn-var true, :arglists (quote ([kf vf kvs]))}, filter-vals {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 870, :column 7, :end-line 870, :end-column 18, :arglists (quote ([pred m]))}, :name taoensso.encore/filter-vals, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 870, :end-line 870, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, ks-nnil? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 679, :column 7, :end-line 679, :end-column 15, :arglists (quote ([ks m]))}, :name taoensso.encore/ks-nnil?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 679, :end-line 679, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, update-in* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 689, :column 7, :end-line 689, :end-column 17, :arglists (quote ([m ks f])), :doc "Like `update-in` but faster, more flexible, and simpler (less ambiguous)"}, :name taoensso.encore/update-in*, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :method-params ([m ks f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 689, :end-line 689, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m ks f])), :doc "Like `update-in` but faster, more flexible, and simpler (less ambiguous)"}, vnext {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 628, :column 7, :end-line 628, :end-column 12, :arglists (quote ([v]))}, :name taoensso.encore/vnext, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 628, :end-line 628, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, *log-level* {:name taoensso.encore/*log-level*, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2451, :column 3, :end-line 2451, :end-column 45, :dynamic true, :doc "DEPRECATED", :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2451, :column 34, :end-line 2451, :end-column 45, :dynamic true, :doc "DEPRECATED"}}, run!* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 658, :column 7, :end-line 658, :end-column 12, :arglists (quote ([proc coll]))}, :name taoensso.encore/run!*, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :method-params ([proc coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 658, :end-line 658, :max-fixed-arity 2, :fn-var true, :arglists (quote ([proc coll]))}, takev {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 987, :column 9, :end-line 987, :end-column 14, :arglists (quote ([n coll]))}, :name taoensso.encore/takev, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([n coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 987, :end-line 987, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n coll]))}, count-words {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1393, :column 7, :end-line 1393, :end-column 18, :arglists (quote ([s]))}, :name taoensso.encore/count-words, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1393, :end-line 1393, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, lazy-seq? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 334, :column 7, :end-line 334, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/lazy-seq?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 334, :end-line 334, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ms->secs {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 539, :column 7, :end-line 539, :end-column 15, :arglists (quote ([ms]))}, :name taoensso.encore/ms->secs, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 539, :end-line 539, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms]))}, run-kv! {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 657, :column 7, :end-line 657, :end-column 14, :arglists (quote ([proc m]))}, :name taoensso.encore/run-kv!, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([proc m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 657, :end-line 657, :max-fixed-arity 2, :fn-var true, :arglists (quote ([proc m]))}, mapply {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 843, :column 7, :end-line 843, :end-column 13, :arglists (quote ([f & args])), :doc "Like `apply` but assumes last arg is a map whose elements should be applied\n  to `f` as an unpaired seq:\n    (mapply (fn [x & {:keys [y z]}] (str x y z)) 1 {:y 2 :z 3})\n      where fn will receive args as: `(1 :y 2 :z 3)`.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}}, :name taoensso.encore/mapply, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}, :method-params [(f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 843, :end-line 843, :max-fixed-arity 1, :fn-var true, :arglists ([f & args]), :doc "Like `apply` but assumes last arg is a map whose elements should be applied\n  to `f` as an unpaired seq:\n    (mapply (fn [x & {:keys [y z]}] (str x y z)) 1 {:y 2 :z 3})\n      where fn will receive args as: `(1 :y 2 :z 3)`."}, rate-limit {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1932, :column 7, :end-line 1932, :end-column 17, :arglists (quote ([specs f]))}, :name taoensso.encore/rate-limit, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :method-params ([specs f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1932, :end-line 1932, :max-fixed-arity 2, :fn-var true, :arglists (quote ([specs f]))}, error-data {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 258, :column 7, :end-line 258, :end-column 17, :arglists (quote ([x])), :doc "Returns data map iff `x` is an error of any type on platform"}, :name taoensso.encore/error-data, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns data map iff `x` is an error of any type on platform"}, map->Swapped {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1060, :column 12, :end-line 1060, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__40991]))}, :name taoensso.encore/map->Swapped, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([G__40991]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 1060, :end-line 1060, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__40991]))}, queue {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 829, :column 7, :end-line 829, :end-column 12, :arglists (quote ([coll] [])), :doc "Returns a PersistentQueue", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([coll] []), :arglists ([coll] []), :arglists-meta (nil nil)}}, :name taoensso.encore/queue, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([coll] []), :arglists ([coll] []), :arglists-meta (nil nil)}, :method-params ([coll] []), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 829, :end-line 829, :max-fixed-arity 1, :fn-var true, :arglists ([coll] []), :doc "Returns a PersistentQueue"}, reset-in! {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1159, :column 7, :end-line 1159, :end-column 16, :arglists (quote ([atom_ ks new-val] [atom_ ks new-val & more])), :doc "Is to `reset!` as `swap-in!` is to `swap!`", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks new-val]), :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/reset-in!, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks new-val]), :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :arglists-meta (nil nil)}, :method-params ([atom_ ks new-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1159, :end-line 1159, :max-fixed-arity 3, :fn-var true, :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :doc "Is to `reset!` as `swap-in!` is to `swap!`"}, format* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1264, :column 7, :end-line 1264, :end-column 14, :arglists (quote ([fmt args]))}, :name taoensso.encore/format*, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([fmt args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1264, :end-line 1264, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fmt args]))}, remove-vals {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 874, :column 7, :end-line 874, :end-column 18, :arglists (quote ([pred m])), :doc "Smaller, common-case version of `filter-vals`. Esp useful with `nil?`/`blank?`\n  pred when constructing maps: {:foo (when _ <...>) :bar (when _ <...>)} in a\n  way that preservers :or semantics."}, :name taoensso.encore/remove-vals, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 874, :end-line 874, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m])), :doc "Smaller, common-case version of `filter-vals`. Esp useful with `nil?`/`blank?`\n  pred when constructing maps: {:foo (when _ <...>) :bar (when _ <...>)} in a\n  way that preservers :or semantics."}, round* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 493, :column 7, :end-line 493, :end-column 13, :arglists (quote ([n] [type n] [type nplaces n])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([n] [type n] [type nplaces n]), :arglists ([n] [type n] [type nplaces n]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/round*, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([n] [type n] [type nplaces n]), :arglists ([n] [type n] [type nplaces n]), :arglists-meta (nil nil nil)}, :method-params ([n] [type n] [type nplaces n]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 493, :end-line 493, :max-fixed-arity 3, :fn-var true, :arglists ([n] [type n] [type nplaces n])}, pos-num? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 358, :column 10, :end-line 358, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/pos-num?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 358, :end-line 358, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, top {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 772, :column 7, :end-line 772, :end-column 10, :arglists (quote ([n coll] [n keyfn coll] [n keyfn cmp coll])), :doc "Returns a sorted vector of the top n items from coll of N items in O(N.logn)\n  time. (take n (sort-by ...)) is O(N.logN) time, so much slower when n << N.\n  Ref. http://stevehanov.ca/blog/index.php?id=122", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([n coll] [n keyfn coll] [n keyfn cmp coll]), :arglists ([n coll] [n keyfn coll] [n keyfn cmp coll]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/top, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([n coll] [n keyfn coll] [n keyfn cmp coll]), :arglists ([n coll] [n keyfn coll] [n keyfn cmp coll]), :arglists-meta (nil nil nil)}, :method-params ([n coll] [n keyfn coll] [n keyfn cmp coll]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 772, :end-line 772, :max-fixed-arity 4, :fn-var true, :arglists ([n coll] [n keyfn coll] [n keyfn cmp coll]), :doc "Returns a sorted vector of the top n items from coll of N items in O(N.logn)\n  time. (take n (sort-by ...)) is O(N.logN) time, so much slower when n << N.\n  Ref. http://stevehanov.ca/blog/index.php?id=122"}, stringy? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 320, :column 7, :end-line 320, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/stringy?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 320, :end-line 320, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, revery? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 663, :column 7, :end-line 663, :end-column 14, :arglists (quote ([pred coll])), :doc "Faster `every?` based on `reduce`"}, :name taoensso.encore/revery?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 663, :end-line 663, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll])), :doc "Faster `every?` based on `reduce`"}, vec2? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 351, :column 7, :end-line 351, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/vec2?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 351, :end-line 351, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, parse-float {:name taoensso.encore/parse-float, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2433, :column 1, :end-line 2433, :end-column 17, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2433, :column 6, :end-line 2433, :end-column 17}}, vsplit-last {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 629, :column 7, :end-line 629, :end-column 18, :arglists (quote ([v]))}, :name taoensso.encore/vsplit-last, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 629, :end-line 629, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, rsome {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 660, :column 7, :end-line 660, :end-column 12, :arglists (quote ([pred coll])), :doc "Faster `some` based on `reduce`"}, :name taoensso.encore/rsome, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 660, :end-line 660, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll])), :doc "Faster `some` based on `reduce`"}, re-pattern? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 338, :column 7, :end-line 338, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/re-pattern?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 338, :end-line 338, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, as-?int {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 369, :column 7, :end-line 369, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-?int, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ks<= {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 677, :column 7, :end-line 677, :end-column 11, :arglists (quote ([ks m]))}, :name taoensso.encore/ks<=, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 11, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 677, :end-line 677, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, name-with-attrs {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 83, :column 7, :end-line 83, :end-column 22, :arglists (quote ([name macro-args])), :doc "Handles optional docstrings & attr maps for a macro def's name.\n  Stolen from `clojure.tools.macro`."}, :name taoensso.encore/name-with-attrs, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 22, :method-params ([name macro-args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name macro-args])), :doc "Handles optional docstrings & attr maps for a macro def's name.\n  Stolen from `clojure.tools.macro`."}, pow {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 491, :column 7, :end-line 491, :end-column 10, :arglists (quote ([n exp]))}, :name taoensso.encore/pow, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 10, :method-params ([n exp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 491, :end-line 491, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n exp]))}, named? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 322, :column 7, :end-line 322, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/named?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 322, :end-line 322, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, exp-backoff {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 524, :column 7, :end-line 524, :end-column 18, :arglists (quote ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]])), :doc "Returns binary exponential backoff value.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :arglists-meta (nil)}}, :name taoensso.encore/exp-backoff, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :arglists-meta (nil)}, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 524, :end-line 524, :max-fixed-arity 1, :fn-var true, :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :doc "Returns binary exponential backoff value."}, swap-val! {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1532, :column 7, :end-line 1532, :end-column 16, :arglists (quote ([atom_ k f])), :doc "Swaps associative value at key and returns the new value. Specialized, fast\n  `swap-in!` for use mostly by memoization utils."}, :name taoensso.encore/swap-val!, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([atom_ k f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1532, :end-line 1532, :max-fixed-arity 3, :fn-var true, :arglists (quote ([atom_ k f])), :doc "Swaps associative value at key and returns the new value. Specialized, fast\n  `swap-in!` for use mostly by memoization utils."}, as-nemail {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 412, :column 7, :end-line 412, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-nemail, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 412, :end-line 412, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, map-keys {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 862, :column 7, :end-line 862, :end-column 15, :arglists (quote ([f m]))}, :name taoensso.encore/map-keys, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([f m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 862, :end-line 862, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f m]))}, into! {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 760, :column 9, :end-line 760, :end-column 14, :arglists (quote ([to from] [to xform from])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([to from] [to xform from]), :arglists ([to from] [to xform from]), :arglists-meta (nil nil)}}, :name taoensso.encore/into!, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([to from] [to xform from]), :arglists ([to from] [to xform from]), :arglists-meta (nil nil)}, :method-params ([to from] [to xform from]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 760, :end-line 760, :max-fixed-arity 3, :fn-var true, :arglists ([to from] [to xform from])}, substr {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1314, :column 7, :end-line 1314, :end-column 13, :arglists (quote ([s start-idx & [?max-len]])), :doc "Gives a consistent, flexible, cross-platform substring API built on\n  `sub-indexes`", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s start-idx [?max-len])], :arglists ([s start-idx & [?max-len]]), :arglists-meta (nil)}}, :name taoensso.encore/substr, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s start-idx [?max-len])], :arglists ([s start-idx & [?max-len]]), :arglists-meta (nil)}, :method-params [(s start-idx [?max-len])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1314, :end-line 1314, :max-fixed-arity 2, :fn-var true, :arglists ([s start-idx & [?max-len]]), :doc "Gives a consistent, flexible, cross-platform substring API built on\n  `sub-indexes`"}, conj-some {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 639, :column 7, :end-line 639, :end-column 16, :arglists (quote ([] [coll] [coll ?x] [coll ?x & ?xs])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [coll] [coll ?x]), :arglists ([] [coll] [coll ?x] [coll ?x & ?xs]), :arglists-meta (nil nil nil nil)}}, :name taoensso.encore/conj-some, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [coll] [coll ?x]), :arglists ([] [coll] [coll ?x] [coll ?x & ?xs]), :arglists-meta (nil nil nil nil)}, :method-params ([] [coll] [coll ?x]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 639, :end-line 639, :max-fixed-arity 2, :fn-var true, :arglists ([] [coll] [coll ?x] [coll ?x & ?xs])}, into-all {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 932, :column 7, :end-line 932, :end-column 15, :arglists (quote ([to from] [to from & more])), :doc "Like `into` but supports multiple \"from\"s", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([to from]), :arglists ([to from] [to from & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/into-all, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([to from]), :arglists ([to from] [to from & more]), :arglists-meta (nil nil)}, :method-params ([to from]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 932, :end-line 932, :max-fixed-arity 2, :fn-var true, :arglists ([to from] [to from & more]), :doc "Like `into` but supports multiple \"from\"s"}, secs {:name taoensso.encore/secs, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 556, :column 1, :end-line 556, :end-column 10, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 556, :column 6, :end-line 556, :end-column 10}}, nil->str {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1236, :column 7, :end-line 1236, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/nil->str, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1236, :end-line 1236, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, interleave-all {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 936, :column 7, :end-line 936, :end-column 21, :arglists (quote ([] [c1] [c1 c2] [c1 c2 & colls])), :doc "Greedy version of `interleave`, Ref. http://goo.gl/KvzqWb", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [c1] [c1 c2]), :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :arglists-meta (nil nil nil nil)}}, :name taoensso.encore/interleave-all, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [c1] [c1 c2]), :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :arglists-meta (nil nil nil nil)}, :method-params ([] [c1] [c1 c2]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 936, :end-line 936, :max-fixed-arity 2, :fn-var true, :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :doc "Greedy version of `interleave`, Ref. http://goo.gl/KvzqWb"}, round0 {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 520, :column 7, :end-line 520, :end-column 13, :arglists (quote ([n]))}, :name taoensso.encore/round0, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 520, :end-line 520, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, when? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1432, :column 7, :end-line 1432, :end-column 12, :arglists (quote ([pred x])), :doc "Experimental. For use with `if-let`s, `when-let`s, etc."}, :name taoensso.encore/when?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :method-params ([pred x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1432, :end-line 1432, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred x])), :doc "Experimental. For use with `if-let`s, `when-let`s, etc."}, swapped*-in {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1065, :column 8, :end-line 1065, :end-column 19, :private true, :arglists (quote ([m ks f])), :doc "[<new-val> <return-val>]"}, :private true, :name taoensso.encore/swapped*-in, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([m ks f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1065, :end-line 1065, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m ks f])), :doc "[<new-val> <return-val>]"}, merge-url-with-query-string {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2371, :column 7, :end-line 2371, :end-column 34, :arglists (quote ([url m]))}, :name taoensso.encore/merge-url-with-query-string, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 34, :method-params ([url m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2371, :end-line 2371, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url m]))}, str-builder {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1212, :column 6, :end-line 1212, :end-column 17}, :name taoensso.encore/str-builder, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :method-params ([] [s-init]), :protocol-impl nil, :arglists-meta (), :column 1, :line 1212, :end-line 1212, :max-fixed-arity 1, :fn-var true, :arglists nil, :doc "For cross-platform string building"}, kw-identical? {:name taoensso.encore/kw-identical?, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 314, :column 8, :end-line 314, :end-column 27, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 314, :column 14, :end-line 314, :end-column 27}}, assoc-conj {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2343, :column 8, :end-line 2343, :end-column 18, :private true, :arglists (quote ([m k v]))}, :private true, :name taoensso.encore/assoc-conj, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([m k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2343, :end-line 2343, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m k v]))}, swapped* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1063, :column 12, :end-line 1063, :end-column 20, :arglists (quote ([x]))}, :name taoensso.encore/swapped*, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1063, :end-line 1063, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, url-encode {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2302, :column 7, :end-line 2302, :end-column 17, :arglists (quote ([s])), :doc "Stolen from http://goo.gl/99NSR1"}, :name taoensso.encore/url-encode, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2302, :end-line 2302, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Stolen from http://goo.gl/99NSR1"}, qname {:name taoensso.encore/qname, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 424, :column 1, :end-line 424, :end-column 11, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 424, :column 6, :end-line 424, :end-column 11}, :doc "Like `name` but includes keyword namespaces in name string"}, fzipmap {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 921, :column 7, :end-line 921, :end-column 14, :arglists (quote ([ks vs])), :doc "Faster `zipmap` using transients"}, :name taoensso.encore/fzipmap, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([ks vs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 921, :end-line 921, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks vs])), :doc "Faster `zipmap` using transients"}, fq-name {:name taoensso.encore/fq-name, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2403, :column 1, :end-line 2403, :end-column 13, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2403, :column 6, :end-line 2403, :end-column 13}}, keys>= {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2427, :column 7, :end-line 2427, :end-column 13, :arglists (quote ([m ks]))}, :name taoensso.encore/keys>=, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2427, :end-line 2427, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, distinctv {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 991, :column 7, :end-line 991, :end-column 16, :arglists (quote ([coll] [keyfn coll])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [keyfn coll]), :arglists ([coll] [keyfn coll]), :arglists-meta (nil nil)}}, :name taoensso.encore/distinctv, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [keyfn coll]), :arglists ([coll] [keyfn coll]), :arglists-meta (nil nil)}, :method-params ([coll] [keyfn coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 991, :end-line 991, :max-fixed-arity 2, :fn-var true, :arglists ([coll] [keyfn coll])}, filter-keys {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 869, :column 7, :end-line 869, :end-column 18, :arglists (quote ([pred m]))}, :name taoensso.encore/filter-keys, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 869, :end-line 869, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, str-rf {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1224, :column 6, :end-line 1224, :end-column 12}, :name taoensso.encore/str-rf, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :method-params ([] [acc] [acc in]), :protocol-impl nil, :arglists-meta (), :column 1, :line 1224, :end-line 1224, :max-fixed-arity 2, :fn-var true, :arglists nil, :doc "String builder reducing fn"}, queue? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 825, :column 7, :end-line 825, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/queue?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 825, :end-line 825, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, debugf {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2457, :column 9, :end-line 2457, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/debugf, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2457, :end-line 2457, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, get-dynamic-assertion-data {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 190, :column 7, :end-line 190, :end-column 33, :arglists (quote ([]))}, :name taoensso.encore/get-dynamic-assertion-data, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 33, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-pooled-xhr! {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2095, :column 8, :end-line 2095, :end-column 23, :private true, :arglists (quote ([])), :doc "Returns an immediately available XhrIo instance, or nil. The instance must be\n  released back to pool manually."}, :private true, :name taoensso.encore/get-pooled-xhr!, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2095, :end-line 2095, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns an immediately available XhrIo instance, or nil. The instance must be\n  released back to pool manually."}, pr-edn {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 241, :column 8, :end-line 241, :end-column 14, :arglists (quote ([x] [_opts x])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [_opts x]), :arglists ([x] [_opts x]), :arglists-meta (nil nil)}}, :name taoensso.encore/pr-edn, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [_opts x]), :arglists ([x] [_opts x]), :arglists-meta (nil nil)}, :method-params ([x] [_opts x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 2, :fn-var true, :arglists ([x] [_opts x])}, ks= {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 676, :column 7, :end-line 676, :end-column 10, :arglists (quote ([ks m]))}, :name taoensso.encore/ks=, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 10, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 676, :end-line 676, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, nnil= {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 414, :column 7, :end-line 414, :end-column 12, :arglists (quote ([x y] [x y & more])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([x y]), :arglists ([x y] [x y & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/nnil=, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([x y]), :arglists ([x y] [x y & more]), :arglists-meta (nil nil)}, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 414, :end-line 414, :max-fixed-arity 2, :fn-var true, :arglists ([x y] [x y & more])}, tracef {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2456, :column 9, :end-line 2456, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/tracef, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2456, :end-line 2456, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, xhr-pool_ {:name taoensso.encore/xhr-pool_, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2093, :column 8, :end-line 2093, :end-column 32, :private true, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2093, :column 23, :end-line 2093, :end-column 32, :private true}}, rate-limiter* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1816, :column 7, :end-line 1816, :end-column 20, :arglists (quote ([specs])), :doc "Takes one or more rate specs of form [ncalls-limit window-ms ?spec-id] and\n  returns a (fn [& [req-id])) that returns `nil` (=> all rate limits passed), or\n  [<ms-wait> <worst-offending-spec-id>] / <ms-wait>."}, :name taoensso.encore/rate-limiter*, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 20, :method-params ([specs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1816, :end-line 1816, :max-fixed-arity 1, :fn-var true, :arglists (quote ([specs])), :doc "Takes one or more rate specs of form [ncalls-limit window-ms ?spec-id] and\n  returns a (fn [& [req-id])) that returns `nil` (=> all rate limits passed), or\n  [<ms-wait> <worst-offending-spec-id>] / <ms-wait>."}, preserve-reduced {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 649, :column 7, :end-line 649, :end-column 23, :arglists (quote ([rf])), :doc "As `clojure.core/preserving-reduced`"}, :name taoensso.encore/preserve-reduced, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 23, :method-params ([rf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 649, :end-line 649, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rf])), :doc "As `clojure.core/preserving-reduced`"}, as-float {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 410, :column 7, :end-line 410, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-float, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 410, :end-line 410, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, infof {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2458, :column 9, :end-line 2458, :end-column 14, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/infof, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2458, :end-line 2458, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, nneg-num? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 357, :column 9, :end-line 357, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/nneg-num?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 357, :end-line 357, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, zero-num? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 359, :column 9, :end-line 359, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/zero-num?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 359, :end-line 359, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, secs->ms {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 538, :column 7, :end-line 538, :end-column 15, :arglists (quote ([secs]))}, :name taoensso.encore/secs->ms, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([secs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 538, :end-line 538, :max-fixed-arity 1, :fn-var true, :arglists (quote ([secs]))}, read-edn {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 198, :column 7, :end-line 198, :end-column 15, :arglists (quote ([s] [opts s])), :doc "Experimental. Attempts to pave over differences in:\n    `clojure.edn/read-string`, `clojure.tools.edn/read-string`,\n    `cljs.reader/read-string`, `cljs.tools.reader/read-string`.\n   `cljs.reader` in particular can be a bit of a pain.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [opts s]), :arglists ([s] [opts s]), :arglists-meta (nil nil)}}, :name taoensso.encore/read-edn, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [opts s]), :arglists ([s] [opts s]), :arglists-meta (nil nil)}, :method-params ([s] [opts s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 2, :fn-var true, :arglists ([s] [opts s]), :doc "Experimental. Attempts to pave over differences in:\n    `clojure.edn/read-string`, `clojure.tools.edn/read-string`,\n    `cljs.reader/read-string`, `cljs.tools.reader/read-string`.\n   `cljs.reader` in particular can be a bit of a pain."}, str-starts-with? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1329, :column 7, :end-line 1329, :end-column 23, :arglists (quote ([s substr]))}, :name taoensso.encore/str-starts-with?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 23, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1329, :end-line 1329, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, round {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2407, :column 7, :end-line 2407, :end-column 12, :arglists (quote ([n & [type nplaces]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(n [type nplaces])], :arglists ([n & [type nplaces]]), :arglists-meta (nil)}}, :name taoensso.encore/round, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(n [type nplaces])], :arglists ([n & [type nplaces]]), :arglists-meta (nil)}, :method-params [(n [type nplaces])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2407, :end-line 2407, :max-fixed-arity 1, :fn-var true, :arglists ([n & [type nplaces]])}, ->Swapped {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1060, :column 12, :end-line 1060, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([new-val return-val]))}, :name taoensso.encore/->Swapped, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([new-val return-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 1060, :end-line 1060, :max-fixed-arity 2, :fn-var true, :arglists (quote ([new-val return-val]))}, rate-limiter {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2439, :column 7, :end-line 2439, :end-column 19, :arglists (quote ([ncalls-limit window-ms]))}, :name taoensso.encore/rate-limiter, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([ncalls-limit window-ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2439, :end-line 2439, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ncalls-limit window-ms]))}, sayf {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2072, :column 9, :end-line 2072, :end-column 13, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/sayf, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2072, :end-line 2072, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, a1-memoize_ {:name taoensso.encore/a1-memoize_, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2396, :column 1, :end-line 2396, :end-column 17, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2396, :column 6, :end-line 2396, :end-column 17}}, least {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2468, :column 7, :end-line 2468, :end-column 12, :arglists (quote ([coll & [?comparator]])), :doc "Deprecated", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}}, :name taoensso.encore/least, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}, :method-params [(coll [?comparator])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2468, :end-line 2468, :max-fixed-arity 1, :fn-var true, :arglists ([coll & [?comparator]]), :doc "Deprecated"}, try-pred {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1419, :column 8, :end-line 1419, :end-column 16, :private true, :arglists (quote ([pred x]))}, :private true, :name taoensso.encore/try-pred, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([pred x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1419, :end-line 1419, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred x]))}, nblank-str? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 356, :column 7, :end-line 356, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/nblank-str?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 356, :end-line 356, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, uuid-str {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1396, :column 7, :end-line 1396, :end-column 15, :arglists (quote ([max-length] [])), :doc "Returns a UUIDv4 string of form \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\n  Ref. http://www.ietf.org/rfc/rfc4122.txt,\n       https://gist.github.com/franks42/4159427", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([max-length] []), :arglists ([max-length] []), :arglists-meta (nil nil)}}, :name taoensso.encore/uuid-str, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([max-length] []), :arglists ([max-length] []), :arglists-meta (nil nil)}, :method-params ([max-length] []), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1396, :end-line 1396, :max-fixed-arity 1, :fn-var true, :arglists ([max-length] []), :doc "Returns a UUIDv4 string of form \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\n  Ref. http://www.ietf.org/rfc/rfc4122.txt,\n       https://gist.github.com/franks42/4159427"}, translate-signed-idx {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 699, :column 8, :end-line 699, :end-column 28, :private true, :arglists (quote ([signed-idx max-idx]))}, :private true, :name taoensso.encore/translate-signed-idx, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 28, :method-params ([signed-idx max-idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 699, :end-line 699, :max-fixed-arity 2, :fn-var true, :arglists (quote ([signed-idx max-idx]))}, pos-int? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 345, :column 8, :end-line 345, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/pos-int?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 345, :end-line 345, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ?as-throw {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 400, :column 8, :end-line 400, :end-column 17, :private true, :arglists (quote ([as-name x]))}, :private true, :name taoensso.encore/?as-throw, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :method-params ([as-name x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 400, :end-line 400, :max-fixed-arity 2, :fn-var true, :arglists (quote ([as-name x]))}, nblank? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 343, :column 9, :end-line 343, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nblank?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 343, :end-line 343, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, set-exp-backoff-timeout! {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2421, :column 14, :end-line 2421, :end-column 38, :arglists (quote ([nullary-f & [nattempt]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nullary-f [nattempt])], :arglists ([nullary-f & [nattempt]]), :arglists-meta (nil)}}, :name taoensso.encore/set-exp-backoff-timeout!, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 38, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nullary-f [nattempt])], :arglists ([nullary-f & [nattempt]]), :arglists-meta (nil)}, :method-params [(nullary-f [nattempt])], :protocol-impl nil, :arglists-meta (nil), :column 8, :line 2421, :end-line 2421, :max-fixed-arity 1, :fn-var true, :arglists ([nullary-f & [nattempt]])}, as-?bool {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 387, :column 7, :end-line 387, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-?bool, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 387, :end-line 387, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, seq-kvs {:name taoensso.encore/seq-kvs, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 836, :column 1, :end-line 836, :end-column 13, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 836, :column 6, :end-line 836, :end-column 13}, :doc "(seq     {:a :A}) => ([:a :A])\n   (seq-kvs {:a :A}) => (:a :A)"}, vsplit-first {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 631, :column 7, :end-line 631, :end-column 19, :arglists (quote ([v]))}, :name taoensso.encore/vsplit-first, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 631, :end-line 631, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, abs {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 492, :column 7, :end-line 492, :end-column 10, :arglists (quote ([n]))}, :name taoensso.encore/abs, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 492, :end-line 492, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, map-kvs {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 851, :column 7, :end-line 851, :end-column 14, :arglists (quote ([kf vf m]))}, :name taoensso.encore/map-kvs, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([kf vf m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 851, :end-line 851, :max-fixed-arity 3, :fn-var true, :arglists (quote ([kf vf m]))}, map-vals {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 861, :column 7, :end-line 861, :end-column 15, :arglists (quote ([f m]))}, :name taoensso.encore/map-vals, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([f m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 861, :end-line 861, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f m]))}, spaced-str-with-nils {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2399, :column 7, :end-line 2399, :end-column 27, :arglists (quote ([xs]))}, :name taoensso.encore/spaced-str-with-nils, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 27, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2399, :end-line 2399, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs]))}, nested-merge-with {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1012, :column 7, :end-line 1012, :end-column 24, :arglists (quote ([f & maps])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f maps)], :arglists ([f & maps]), :arglists-meta (nil)}}, :name taoensso.encore/nested-merge-with, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f maps)], :arglists ([f & maps]), :arglists-meta (nil)}, :method-params [(f maps)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1012, :end-line 1012, :max-fixed-arity 1, :fn-var true, :arglists ([f & maps])}, as-?float {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 379, :column 7, :end-line 379, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-?float, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 379, :end-line 379, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, explode-keyword {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 427, :column 7, :end-line 427, :end-column 22, :arglists (quote ([k]))}, :name taoensso.encore/explode-keyword, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 22, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 427, :end-line 427, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, as-?nblank {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 361, :column 7, :end-line 361, :end-column 17, :arglists (quote ([x]))}, :name taoensso.encore/as-?nblank, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 361, :end-line 361, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sentinel->nil {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 769, :column 9, :end-line 769, :end-column 22, :arglists (quote ([x]))}, :name taoensso.encore/sentinel->nil, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 769, :end-line 769, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, xdistinct {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 969, :column 9, :end-line 969, :end-column 18, :arglists (quote ([] [keyfn])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [keyfn]), :arglists ([] [keyfn]), :arglists-meta (nil nil)}}, :name taoensso.encore/xdistinct, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [keyfn]), :arglists ([] [keyfn]), :arglists-meta (nil nil)}, :method-params ([] [keyfn]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 969, :end-line 969, :max-fixed-arity 1, :fn-var true, :arglists ([] [keyfn])}, assoc-some {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 815, :column 7, :end-line 815, :end-column 17, :arglists (quote ([m & kvs])), :doc "Assocs each kv iff its value is not nil", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}}, :name taoensso.encore/assoc-some, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}, :method-params [(m kvs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 815, :end-line 815, :max-fixed-arity 1, :fn-var true, :arglists ([m & kvs]), :doc "Assocs each kv iff its value is not nil"}, keys=nnil? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2428, :column 7, :end-line 2428, :end-column 17, :arglists (quote ([m ks]))}, :name taoensso.encore/keys=nnil?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2428, :end-line 2428, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, as-bool {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 408, :column 7, :end-line 408, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-bool, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 408, :end-line 408, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, errorf {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2460, :column 9, :end-line 2460, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/errorf, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2460, :end-line 2460, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, clj1098 {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2474, :column 7, :end-line 2474, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/clj1098, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2474, :end-line 2474, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, parse-bool {:name taoensso.encore/parse-bool, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2431, :column 1, :end-line 2431, :end-column 16, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2431, :column 6, :end-line 2431, :end-column 16}}, keys<= {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2426, :column 7, :end-line 2426, :end-column 13, :arglists (quote ([m ks]))}, :name taoensso.encore/keys<=, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2426, :end-line 2426, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, str-replace {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1282, :column 7, :end-line 1282, :end-column 18, :arglists (quote ([s match replacement])), :doc "Workaround for http://dev.clojure.org/jira/browse/CLJS-794,\n                  http://dev.clojure.org/jira/browse/CLJS-911.\n\n  Note that ClojureScript 1.7.145 technically introduced a breaking \"fix\" for\n  CLJS-911 (Ref. https://goo.gl/bk5hcT) but it's a mess in an attempt to keep\n  some compatibility with the previous broken behaviour. The merged CLJS-911 fix\n  provides only inconsistent (single-match) and error-prone compatibility with\n  Clojure's `str/replace`. CLJS-794 is also still unresolved.\n\n  This util provides proper consistent Clojure/Script replace behaviour."}, :name taoensso.encore/str-replace, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 18, :method-params ([s match replacement]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1282, :end-line 1282, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s match replacement])), :doc "Workaround for http://dev.clojure.org/jira/browse/CLJS-794,\n                  http://dev.clojure.org/jira/browse/CLJS-911.\n\n  Note that ClojureScript 1.7.145 technically introduced a breaking \"fix\" for\n  CLJS-911 (Ref. https://goo.gl/bk5hcT) but it's a mess in an attempt to keep\n  some compatibility with the previous broken behaviour. The merged CLJS-911 fix\n  provides only inconsistent (single-match) and error-prone compatibility with\n  Clojure's `str/replace`. CLJS-794 is also still unresolved.\n\n  This util provides proper consistent Clojure/Script replace behaviour."}, parse-int {:name taoensso.encore/parse-int, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2432, :column 1, :end-line 2432, :end-column 15, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2432, :column 6, :end-line 2432, :end-column 15}}, without-meta {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 420, :column 7, :end-line 420, :end-column 19, :arglists (quote ([x]))}, :name taoensso.encore/without-meta, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 420, :end-line 420, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, memoize1 {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1579, :column 7, :end-line 1579, :end-column 15, :arglists (quote ([f])), :doc "Great for Reactjs render op caching on mobile devices, etc."}, :name taoensso.encore/memoize1, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1579, :end-line 1579, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "Great for Reactjs render op caching on mobile devices, etc."}, round1 {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 521, :column 7, :end-line 521, :end-column 13, :arglists (quote ([n]))}, :name taoensso.encore/round1, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 521, :end-line 521, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, merge-deep-with {:name taoensso.encore/merge-deep-with, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2435, :column 1, :end-line 2435, :end-column 21, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2435, :column 6, :end-line 2435, :end-column 21}}, replace-in* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1075, :column 8, :end-line 1075, :end-column 19, :private true, :arglists (quote ([?vf-type m ops])), :doc "Reduces input with\n  [<type> <ks> <reset-val-or-swap-fn>] or\n         [<ks> <reset-val-or-swap-fn>] ops"}, :private true, :name taoensso.encore/replace-in*, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 19, :method-params ([?vf-type m ops]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1075, :end-line 1075, :max-fixed-arity 3, :fn-var true, :arglists (quote ([?vf-type m ops])), :doc "Reduces input with\n  [<type> <ks> <reset-val-or-swap-fn>] or\n         [<ks> <reset-val-or-swap-fn>] ops"}, as-email {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 411, :column 7, :end-line 411, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-email, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 411, :end-line 411, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, vec3? {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 352, :column 7, :end-line 352, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/vec3?, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 352, :end-line 352, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, assert-min-encore-version {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 48, :column 7, :end-line 48, :end-column 32, :arglists (quote ([min-version]))}, :name taoensso.encore/assert-min-encore-version, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 32, :method-params ([min-version]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([min-version]))}, replace-in {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1095, :column 7, :end-line 1095, :end-column 17, :arglists (quote ([m & ops])), :doc "Experimental. For use with `swap!`, etc.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m ops)], :arglists ([m & ops]), :arglists-meta (nil)}}, :name taoensso.encore/replace-in, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m ops)], :arglists ([m & ops]), :arglists-meta (nil)}, :method-params [(m ops)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1095, :end-line 1095, :max-fixed-arity 1, :fn-var true, :arglists ([m & ops]), :doc "Experimental. For use with `swap!`, etc."}, assoc-when {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 819, :column 7, :end-line 819, :end-column 17, :arglists (quote ([m & kvs])), :doc "Assocs each kv iff its val is truthy", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}}, :name taoensso.encore/assoc-when, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}, :method-params [(m kvs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 819, :end-line 819, :max-fixed-arity 1, :fn-var true, :arglists ([m & kvs]), :doc "Assocs each kv iff its val is truthy"}, as-?qname {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 364, :column 7, :end-line 364, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-?qname, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 364, :end-line 364, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, logp {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2069, :column 9, :end-line 2069, :end-column 13, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/logp, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2069, :end-line 2069, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, as-map {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 906, :column 7, :end-line 906, :end-column 13, :arglists (quote ([kvs & [kf vf]])), :doc "Cross between `hash-map` & `map-kvs`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(kvs [kf vf])], :arglists ([kvs & [kf vf]]), :arglists-meta (nil)}}, :name taoensso.encore/as-map, :variadic true, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(kvs [kf vf])], :arglists ([kvs & [kf vf]]), :arglists-meta (nil)}, :method-params [(kvs [kf vf])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 906, :end-line 906, :max-fixed-arity 1, :fn-var true, :arglists ([kvs & [kf vf]]), :doc "Cross between `hash-map` & `map-kvs`"}, vec* {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 613, :column 7, :end-line 613, :end-column 11, :arglists (quote ([x]))}, :name taoensso.encore/vec*, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 613, :end-line 613, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, backport-run! {:name taoensso.encore/backport-run!, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 2402, :column 1, :end-line 2402, :end-column 19, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2402, :column 6, :end-line 2402, :end-column 19}}, gc-rate {:name taoensso.encore/gc-rate, :file "resources/public/js/devcards/taoensso/encore.cljs", :line 1529, :column 1, :end-line 1529, :end-column 31, :const true, :private true, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 1529, :column 24, :end-line 1529, :end-column 31, :const true, :private true}}, keys= {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 2425, :column 7, :end-line 2425, :end-column 12, :arglists (quote ([m ks]))}, :name taoensso.encore/keys=, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2425, :end-line 2425, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, ks>= {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 678, :column 7, :end-line 678, :end-column 11, :arglists (quote ([ks m]))}, :name taoensso.encore/ks>=, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 11, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 678, :end-line 678, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, ->vec {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 626, :column 7, :end-line 626, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/->vec, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 626, :end-line 626, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, round2 {:protocol-inline nil, :meta {:file "/Users/timothypratley/git/pirates/resources/public/js/devcards/taoensso/encore.cljs", :line 522, :column 7, :end-line 522, :end-column 13, :arglists (quote ([n]))}, :name taoensso.encore/round2, :variadic false, :file "resources/public/js/devcards/taoensso/encore.cljs", :end-column 13, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 522, :end-line 522, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}}, :require-macros {enc-macros taoensso.encore, taoensso.encore taoensso.encore}, :cljs.analyzer/constants {:seen #{:tick new-val :max-len :taoensso.encore/dynamic :nblank :?ratio :min :email :report :mem/all :get :backoff-ms :hash :rl/reset :ev :rl/peek :?content :else :int :keywordize :err-type :reset :protocol :unknown :rl/all :method :default :pathname :float :xhr-pool-depleted :new :warn :msecs :name :trace :swap/dissoc :readers :secs :loaded :mem/del :months :params :days :type :mins :debug :err-cause :hostname :qname :search :abort :kw :http-error :headers :fatal :round :progress-fn :mem/debug :host :total :with-credentials? :ajax/resp-as-text :arg :mem/fresh :result :errorf :max :factor :err-msg :swap :edn :raw-resp :info :rl/debug :?content-type :ajax/bad-response-type :hours :return-val :years :error :?status :exception :bool :new-val :json :timeout :resp-type :min-version :your-version :ms :doc :xml :success? :length-computable? :auto :end-idx :xhr :arg-type :weeks :nemail :href :always return-val :timeout-ms :?error :no-content :old :text}, :order [:min-version :your-version :doc :arg :type :readers :taoensso.encore/dynamic :default :err-type :err-msg :err-cause :nblank :kw :name :qname :bool :int :float :email :nemail :round :min :max :factor :years :months :weeks :days :hours :mins :secs :msecs :ms :else :max-len :end-idx :keywordize :new-val :return-val new-val return-val :swap/dissoc :swap :old :new :reset :arg-type :mem/debug :mem/del :mem/all :mem/fresh :tick :rl/debug :rl/reset :rl/all :rl/peek :href :protocol :hostname :host :pathname :search :hash :method :get :params :headers :timeout-ms :resp-type :auto :with-credentials? :progress-fn :errorf :timeout :edn :json :xml :text :ajax/bad-response-type :ajax/resp-as-text :raw-resp :xhr :success? :?content-type :?content :?status :?error :exception :http-error :abort :unknown :no-content :?ratio :length-computable? :loaded :total :ev :always :xhr-pool-depleted :debug :backoff-ms :result :trace :info :warn :error :fatal :report]}, :doc "Core utils library for Clojure/Script"}